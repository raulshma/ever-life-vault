// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ldnilzmkufdosagwowgd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxkbmlsem1rdWZkb3NhZ3dvd2dkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQxNDAxNTMsImV4cCI6MjA2OTcxNjE1M30.Ss9QWHypQcrAlz0FSWGBVPvriTMJCcfS2ok_cMuvT5M";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Use a stable storage key so we can selectively clear it for non-remembered sessions
export const SUPABASE_AUTH_STORAGE_KEY = 'elsb-auth';
export const SUPABASE_NO_REMEMBER_FLAG_KEY = 'elsb-no-remember';

const getAuthStorage = (): Storage | undefined => {
  if (typeof window === 'undefined') return undefined as unknown as Storage;
  try {
    const noRemember = window.sessionStorage.getItem(SUPABASE_NO_REMEMBER_FLAG_KEY) === '1';
    return noRemember ? window.sessionStorage : window.localStorage;
  } catch {
    return window.localStorage;
  }
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: getAuthStorage(),
    storageKey: SUPABASE_AUTH_STORAGE_KEY,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
  },
  global: {
    fetch: (input, init) => {
      // Avoid sending referrer for privacy and cache better
      const nextInit: RequestInit = { ...init, referrerPolicy: 'no-referrer' }
      return fetch(input as any, nextInit)
    }
  }
});