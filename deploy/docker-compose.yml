version: '3.8'

services:
  backend:
    image: ever-life-vault/backend:latest
    container_name: ever-life-vault_backend
    ports:
      - "${BACKEND_PORT:-8787}:8787"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8787/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      # Network / runtime
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=8787
      # App config (override via .env or Jenkins)
      - OAUTH_REDIRECT_BASE_URL=${PUBLIC_BASE_URL:-http://localhost:8080}
      - OAUTH_REDIRECT_PATH=/steam
      # Allowed origins for CORS (comma separated)
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:8080,http://127.0.0.1:8080}
      - ALLOWED_TARGET_HOSTS=${ALLOWED_TARGET_HOSTS:-localhost,127.0.0.1}
      # Downstream proxy targets (optional)
      - JELLYSEERR_BASE
      - JELLYFIN_BASE
      - KARAKEEP_BASE
      # Supabase
      - SUPABASE_URL
      - SUPABASE_ANON_KEY
      - SUPABASE_SERVICE_ROLE_KEY
      # OAuth providers (optional)
      - REDDIT_CLIENT_ID
      - REDDIT_CLIENT_SECRET
      - REDDIT_REDIRECT_URI
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - GOOGLE_REDIRECT_URI
      - MS_CLIENT_ID
      - MS_CLIENT_SECRET
      - MS_REDIRECT_URI
      - YT_CLIENT_ID
      - YT_CLIENT_SECRET
      - YT_REDIRECT_URI
      - YTM_CLIENT_ID
      - YTM_CLIENT_SECRET
      - YTM_REDIRECT_URI
      - SPOTIFY_CLIENT_ID
      - SPOTIFY_CLIENT_SECRET
      - SPOTIFY_REDIRECT_URI
      - STEAM_WEB_API_KEY
      # MAL (optional)
      - MAL_CLIENT_ID
      - MAL_CLIENT_SECRET
      - MAL_REDIRECT_URI
      - MAL_TOKENS_SECRET
      # Cloudflare Turnstile
      - TURNSTILE_SITE_KEY
      - TURNSTILE_SECRET_KEY
      # Build metadata
      - BUILD_NUMBER
      - BUILD_ID
      - GIT_COMMIT
    restart: unless-stopped
    # Security and resource limits
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/tmp:noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.ever-life-vault.service=backend"
      - "com.ever-life-vault.version=latest"

  web:
    image: ever-life-vault/web:latest
    container_name: ever-life-vault_web
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "${WEB_PORT:-8080}:80"
      - "${WEB_SSL_PORT:-8443}:443"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      # Frontend environment variables
      - NODE_ENV=production
      # Turnstile site key for client-side
      - VITE_TURNSTILE_SITE_KEY
      # Build metadata
      - BUILD_NUMBER
      - BUILD_ID
      - GIT_COMMIT
    restart: unless-stopped
    # Security and resource limits
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/tmp:noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.ever-life-vault.service=web"
      - "com.ever-life-vault.version=latest"

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: ever-life-vault_net
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    labels:
      - "com.ever-life-vault.network=app"

volumes:
  # Add any persistent volumes if needed
  # - ./data:/app/data


